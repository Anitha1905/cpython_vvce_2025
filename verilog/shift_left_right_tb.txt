module tb_shift_register_8bit;
    reg clk;
    reg rstn;
    reg shift_left_right;
    reg load;
  reg [7:0] i;
  wire [7:0] q;

    left_right_load_reg uut (
        .clk(clk),
        .rstn(rstn),
        .shift_left_right(shift_left_right),
        .load(load),
      .i(i),
      .q(q)
    );
    initial clk = 0;
    always #5 clk = ~clk;
    initial begin
        rstn = 0; shift_left_right = 0; load = 0; i = 8'b0;
        #10;
        rstn = 1;              // release reset
        #10;

        // Load data 8'b11001100
        i = 8'b11001100;
        load = 1;
        #10;
        load = 0;

        // Shift left 4 times
        shift_left_right = 1;
        repeat(4) #10;

        // Shift right 4 times
        shift_left_right = 0;
        repeat(4) #10;

        $finish;
    end

    initial begin
      $monitor("Time=%0t | rstn=%b | load=%b | shift_left_right=%b | i=%b | q=%b",
                 $time, rstn, load, shift_left_right, i, q);
    end

endmodule
